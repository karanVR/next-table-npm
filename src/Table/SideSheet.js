import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Separator } from '@/components/ui/separator';
import { Skeleton } from '@/components/ui/skeleton';
import { H4, TextSmall } from '@/components/ui/typography';
import { cn } from '@/lib/utils';
import { format } from 'date-fns';
import { FaCircle } from 'react-icons/fa';
const SideSheet = ({ data, isLoading }) => {
    return (_jsxs("div", { className: (cn('h-full '), data ? '' : 'grayscale'), children: [isLoading && (_jsxs("div", { className: "ml-4 mt-8 h-[75dvh] flex flex-col justify-between", children: [_jsxs("div", { className: "flex justify-start gap-24", children: [_jsx(Skeleton, { className: "h-[2dvh] w-[20%]" }), _jsx(Skeleton, { className: "h-[2dvh] w-[20%]" })] }), _jsxs("div", { className: "flex flex-col gap-2 pt-8", children: [_jsx(Skeleton, { className: "h-6 w-[150px]" }), _jsx(Skeleton, { className: "h-4 w-72" }), _jsx(Skeleton, { className: "h-4 w-72" }), _jsx(Skeleton, { className: "h-4 w-40" })] }), _jsxs("div", { className: "flex flex-col gap-2 pt-8", children: [_jsx(Skeleton, { className: "h-6 w-[150px]" }), _jsx(Skeleton, { className: "h-4 w-60" }), _jsx(Skeleton, { className: "h-4 w-84" }), _jsx(Skeleton, { className: "h-4 w-32" })] }), _jsxs("div", { className: "flex flex-col gap-2 py-8 ", children: [_jsx(Skeleton, { className: "h-6 w-[150px]" }), _jsx(Skeleton, { className: "h-4 w-72" }), _jsx(Skeleton, { className: "h-4 w-72" }), _jsx(Skeleton, { className: "h-4 w-24" })] }), _jsx(Skeleton, { className: "h-[12dvh] w-[100%]" })] })), !isLoading && (_jsxs("div", { className: cn('md:bg-[#F3F5FD] flex flex-col relative h-[74dvh] '), children: [_jsxs("div", { className: "flex justify-between p-4 items-center relative top-1", children: [_jsx(H4, { className: "text-[#297FFF]", children: "Summary" }), _jsxs("div", { className: cn('font-bold flex items-center gap-2 absolute right-16', data?.status === 1 ? 'text-green-500' : data?.status === 4 ? 'text-yellow-500' : ''), children: [_jsx(FaCircle, { size: "8px" }), _jsx(TextSmall, { className: "inline", children: data?.status === 4 ? 'Pending' : ('Active' ?? 'Pending') })] })] }), _jsx(Separator, { className: "mt-[1vh] w-full" }), _jsxs("div", { className: "p-4 flex flex-col gap-2 ", children: [_jsx(TextSmall, { className: "inline font-bold text-sm ", children: "Contact Information" }), _jsxs(TextSmall, { className: "inline  text-[10px] text-[#7E7E7E]", children: ["Name:", ' ', _jsx(TextSmall, { className: "inline text-black text-xs", children: data?.customer?.name })] }), _jsxs(TextSmall, { className: "inline text-[10px] text-[#7E7E7E]", children: ["Phone Number:", ' ', _jsx(TextSmall, { className: "inline text-black text-xs", children: data?.customer?.phone })] }), _jsxs(TextSmall, { className: "inline  text-[10px] text-[#7E7E7E]", children: ["Email ID:", ' ', _jsxs(TextSmall, { className: "inline text-black text-xs", children: [' ', data?.customer?.email ?? 'karan@samsung.com'] })] })] }), _jsx(Separator, {}), _jsxs("div", { className: "p-4 flex flex-col gap-2", children: [_jsx(TextSmall, { className: "inline font-bold text-sm color-[#7E7E7E]", children: "Plan Details" }), _jsxs(TextSmall, { className: "inline  text-[10px] text-[#7E7E7E]", children: ["Plan Name:", ' ', _jsx(TextSmall, { className: "inline text-black text-xs", children: data?.display_plan_name })] }), _jsxs(TextSmall, { className: "inline text-[10px] text-[#7E7E7E]", children: ["Plan Serial Number:", ' ', _jsx(TextSmall, { className: "inline text-black text-xs", children: (data && data?.id) ?? '' })] }), _jsxs(TextSmall, { className: "inline text-[10px] text-[#7E7E7E]", children: ["Warranty Start Date:", ' ', _jsx(TextSmall, { className: "inline text-black text-xs", children: data?.warranty_start_date ?? 'N/A' })] }), _jsxs(TextSmall, { className: "inline text-[10px] text-[#7E7E7E]", children: ["Warranty End Date:", ' ', _jsx(TextSmall, { className: "inline text-black text-xs", children: data?.warranty_end_date ?? 'N/A' })] }), _jsxs(TextSmall, { className: "inline  text-[10px] text-[#297FFF] font-bold", children: ["Plan MRP:", ' ', _jsxs(TextSmall, { className: "inline", children: [" ", data?.kitprice?.customer_price ?? 1999] })] }), _jsxs(TextSmall, { className: "inline  text-[10px] text-[#297FFF] font-bold", children: ["Retailer Landing Cost:", ' ', _jsxs(TextSmall, { className: "inline", children: [" ", data?.kitprice?.retailer_price ?? 1099] })] })] }), _jsx(Separator, {}), _jsxs("div", { className: "p-4 flex flex-col gap-2", children: [_jsx(TextSmall, { className: "inline font-bold text-sm ", children: "Product Details" }), _jsxs(TextSmall, { className: "inline  text-[10px] text-[#7E7E7E]", children: ["IMEI Number:", ' ', _jsx(TextSmall, { className: "inline text-black text-xs", children: data?.items[0]?.imeinumber })] }), _jsxs(TextSmall, { className: "inline text-[10px] text-[#7E7E7E]", children: ["Model:", ' ', _jsx(TextSmall, { className: "inline text-black text-xs", children: data?.items[0]?.model })] }), _jsxs(TextSmall, { className: "inline  text-[10px] text-[#7E7E7E]", children: ["Product Purchase Date:", ' ', _jsx(TextSmall, { className: "inline text-black text-xs", children: data?.items[0].purchasedate
                                            ? format(new Date(data?.items[0].purchasedate), 'dd-MM-yyyy')
                                            : '' })] }), _jsxs(TextSmall, { className: "inline  text-[10px] text-[#7E7E7E]", children: ["Product Price:", ' ', _jsx(TextSmall, { className: "inline text-black text-xs", children: data?.items[0]?.price ?? '0' })] })] })] }))] }));
};
export default SideSheet;
//# sourceMappingURL=SideSheet.js.map